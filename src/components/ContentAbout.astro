---
import { Code } from 'astro:components';

const code = `interface Developer {
    name: string;
    skills: string[];
    interests: string[];
};

interface TechStack {
    devOps: string[];
    backend: string[];
   frontend: string[];
   design: string[];
};

type ContactType = 'github' | 'twitter' | 'linkedIn' | 'bluesky' | 'email';

const techStack: TechStack = {
    devOps: [
        'GitHub',
        'Docker',
        'Kubernetes',
        'Cloudflare'
    ],
    backend: [
        'Golang',
        'Python',
        'Node.js',
        'Flask'
    ],
    frontend: [
        'JavaScript',
        'Angular',
        'Vue.js',
        'Jinja2',
        'HTML5',
        'CSS3',
        'TailwindCSS',
        'Astro',
        'SCSS',
        'Markdown',
        'WordPress'
    ],
    design: [
        'Adobe Illustrator'
    ]
};

// Developer profile
const me: Developer = {
    name: 'Ashley Willis',
    skills: [
       ...techStack.devOps,
        ...techStack.backend,
        ...techStack.frontend,
        ...techStack.design
    ],
    interests: [
        'Open Source',
        'Developer Experience',
        'Developer Relations',
        'Performance',
        'AI',
        'Accessibility',
        'Networking',
        'Photography',
        'Maker Projects',
        'Public Speaking'
    ]
};

// Contact function
const contact = (type: ContactType): string => {
    switch (type) {
        case 'github':
            return 'https://github.com/ashleymcnamara';
        case 'twitter':
            return 'https://x.com/ashleymcnamara';
        case 'linkedIn':
            return 'https://www.linkedin.com/in/ashleymcnamara1';
        case 'bluesky':
            return 'https://bsky.app/profile/ashley.dev';
        case 'email':
            return 'hello@ashley.dev';
        default:
            return 'Send fax.';
    }
};

`;
---

<Code
    code={code}
    lang="js"
    wrap={false}
/>

<style is:global>
    /* Custom styling for code blocks with line numbers */
    pre.astro-code {
        @apply bg-transparent overflow-x-auto !important;
        position: relative;
        margin: 0;
        padding: 0;
    }

    pre.astro-code code {
        @apply block;
        counter-reset: line;
        font-size: 0.85rem;
        line-height: 1.5;
        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
    }

    pre.astro-code code .line {
        @apply relative;
        padding-left: 3.5rem;
        min-height: 1.5em;
        position: relative;
    }

    pre.astro-code code .line::before {
        counter-increment: line;
        content: counter(line);
        position: absolute;
        left: 0;
        top: 0;
        width: 3rem;
        text-align: right;
        padding-right: 0.5rem;
        color: #6b7280;
        font-family: "SF Mono", SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace;
        font-variant-numeric: tabular-nums;
        user-select: none;
    }

    /* Responsive adjustments */
    @media (max-width: 640px) {
        pre.astro-code code {
            font-size: 0.75rem;
        }
    }
    
    @media (max-width: 480px) {
        pre.astro-code code .line {
            padding-left: 2.8rem;
        }
        
        pre.astro-code code .line::before {
            width: 2.3rem;
        }
    }
</style>