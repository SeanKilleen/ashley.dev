---
interface Props {
    contentId: string;
    contentName: string;
};

const {
    contentId,
    contentName,
} = Astro.props as Props;

// Map content IDs to proper URLs
const urlMap = {
    'tab1': '/',
    'tab2': '/projects',
    'tab3': '/speaking',
    'tab4': '/blog'
};

const url = urlMap[contentId] || '/';
---

<a
    href={url}
    class={[
        "tab-link",

        "flex items-center gap-0.5 md:gap-1 py-1.5 px-0.5 md:px-2 text-xs cursor-pointer",
        "min-w-[auto] flex-1 justify-center", // Changed to flex-1 with auto min-width for better mobile adaptation

        "bg-black",
        "text-gray-100",
        "hover:text-primary",

        "!border-r",
        "!border-r-gray-600"
    ].join(" ")}
>
    <svg class="hidden sm:inline-block flex-shrink-0 w-3.5 h-3.5 md:w-4 md:h-4" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"></path><polyline points="14 2 14 8 20 8"></polyline></svg>
    <h2 class="whitespace-nowrap text-[0.65rem] sm:text-xs">{contentName}</h2>
</a>